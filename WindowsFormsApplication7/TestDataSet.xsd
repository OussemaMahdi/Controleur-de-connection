<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TestDataSet" targetNamespace="http://tempuri.org/TestDataSet.xsd" xmlns:mstns="http://tempuri.org/TestDataSet.xsd" xmlns="http://tempuri.org/TestDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TestConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TestConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WindowsFormsApplication7.Properties.Settings.GlobalReference.Default.TestConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AdministrateursTableAdapter" GeneratorDataComponentClassName="AdministrateursTableAdapter" Name="Administrateurs" UserDataComponentName="AdministrateursTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestConnectionString (Settings)" DbObjectName="Test.dbo.Administrateurs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Administrateurs] WHERE (((@IsNull_Nom = 1 AND [Nom] IS NULL) OR ([Nom] = @Original_Nom)) AND ((@IsNull_Prenom = 1 AND [Prenom] IS NULL) OR ([Prenom] = @Original_Prenom)) AND ([NumTel] = @Original_NumTel))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Nom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Nom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Prenom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Prenom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Prenom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Prenom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_NumTel" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NumTel" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Administrateurs] ([Nom], [Prenom], [NumTel]) VALUES (@Nom, @Prenom, @NumTel);
SELECT Nom, Prenom, NumTel FROM Administrateurs WHERE (NumTel = @NumTel)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Prenom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Prenom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@NumTel" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NumTel" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Nom, Prenom, NumTel FROM dbo.Administrateurs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Administrateurs] SET [Nom] = @Nom, [Prenom] = @Prenom, [NumTel] = @NumTel WHERE (((@IsNull_Nom = 1 AND [Nom] IS NULL) OR ([Nom] = @Original_Nom)) AND ((@IsNull_Prenom = 1 AND [Prenom] IS NULL) OR ([Prenom] = @Original_Prenom)) AND ([NumTel] = @Original_NumTel));
SELECT Nom, Prenom, NumTel FROM Administrateurs WHERE (NumTel = @NumTel)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Prenom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Prenom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@NumTel" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NumTel" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Nom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Nom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Prenom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Prenom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Prenom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Prenom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_NumTel" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NumTel" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Nom" DataSetColumn="Nom" />
              <Mapping SourceColumn="Prenom" DataSetColumn="Prenom" />
              <Mapping SourceColumn="NumTel" DataSetColumn="NumTel" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AdressesTableAdapter" GeneratorDataComponentClassName="AdressesTableAdapter" Name="Adresses" UserDataComponentName="AdressesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestConnectionString (Settings)" DbObjectName="Test.dbo.Adresses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Adresses] WHERE (([Adresse] = @Original_Adresse) AND ((@IsNull_Serveur = 1 AND [Serveur] IS NULL) OR ([Serveur] = @Original_Serveur)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Adresse" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Adresse" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Serveur" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Serveur" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Serveur" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Serveur" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Adresses] ([Adresse], [Serveur]) VALUES (@Adresse, @Serveur);
SELECT Adresse, Serveur FROM Adresses WHERE (Adresse = @Adresse)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Adresse" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Adresse" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Serveur" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Serveur" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Adresse, Serveur FROM dbo.Adresses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Adresses] SET [Adresse] = @Adresse, [Serveur] = @Serveur WHERE (([Adresse] = @Original_Adresse) AND ((@IsNull_Serveur = 1 AND [Serveur] IS NULL) OR ([Serveur] = @Original_Serveur)));
SELECT Adresse, Serveur FROM Adresses WHERE (Adresse = @Adresse)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Adresse" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Adresse" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Serveur" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Serveur" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Adresse" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Adresse" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Serveur" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Serveur" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Serveur" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Serveur" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Adresse" DataSetColumn="Adresse" />
              <Mapping SourceColumn="Serveur" DataSetColumn="Serveur" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MailTableAdapter" GeneratorDataComponentClassName="MailTableAdapter" Name="Mail" UserDataComponentName="MailTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestConnectionString (Settings)" DbObjectName="Test.dbo.Mail" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Mail] WHERE (([Adresse] = @Original_Adresse) AND ((@IsNull_Passe = 1 AND [Passe] IS NULL) OR ([Passe] = @Original_Passe)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Adresse" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Adresse" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Passe" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Passe" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Passe" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Passe" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Mail] ([Adresse], [Passe]) VALUES (@Adresse, @Passe);
SELECT Adresse, Passe FROM Mail WHERE (Adresse = @Adresse)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Adresse" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Adresse" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Passe" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Passe" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Adresse, Passe FROM dbo.Mail</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Mail] SET [Adresse] = @Adresse, [Passe] = @Passe WHERE (([Adresse] = @Original_Adresse) AND ((@IsNull_Passe = 1 AND [Passe] IS NULL) OR ([Passe] = @Original_Passe)));
SELECT Adresse, Passe FROM Mail WHERE (Adresse = @Adresse)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Adresse" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Adresse" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Passe" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Passe" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Adresse" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Adresse" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Passe" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Passe" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Passe" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Passe" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Adresse" DataSetColumn="Adresse" />
              <Mapping SourceColumn="Passe" DataSetColumn="Passe" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TestDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="TestDataSet" msprop:Generator_UserDSName="TestDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Administrateurs" msprop:Generator_TableClassName="AdministrateursDataTable" msprop:Generator_TableVarName="tableAdministrateurs" msprop:Generator_TablePropName="Administrateurs" msprop:Generator_RowDeletingName="AdministrateursRowDeleting" msprop:Generator_UserTableName="Administrateurs" msprop:Generator_RowChangingName="AdministrateursRowChanging" msprop:Generator_RowEvHandlerName="AdministrateursRowChangeEventHandler" msprop:Generator_RowDeletedName="AdministrateursRowDeleted" msprop:Generator_RowEvArgName="AdministrateursRowChangeEvent" msprop:Generator_RowChangedName="AdministrateursRowChanged" msprop:Generator_RowClassName="AdministrateursRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Nom" msprop:Generator_ColumnVarNameInTable="columnNom" msprop:Generator_ColumnPropNameInRow="Nom" msprop:Generator_ColumnPropNameInTable="NomColumn" msprop:Generator_UserColumnName="Nom" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Prenom" msprop:Generator_ColumnVarNameInTable="columnPrenom" msprop:Generator_ColumnPropNameInRow="Prenom" msprop:Generator_ColumnPropNameInTable="PrenomColumn" msprop:Generator_UserColumnName="Prenom" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NumTel" msprop:Generator_ColumnVarNameInTable="columnNumTel" msprop:Generator_ColumnPropNameInRow="NumTel" msprop:Generator_ColumnPropNameInTable="NumTelColumn" msprop:Generator_UserColumnName="NumTel">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Adresses" msprop:Generator_TableClassName="AdressesDataTable" msprop:Generator_TableVarName="tableAdresses" msprop:Generator_TablePropName="Adresses" msprop:Generator_RowDeletingName="AdressesRowDeleting" msprop:Generator_UserTableName="Adresses" msprop:Generator_RowChangingName="AdressesRowChanging" msprop:Generator_RowEvHandlerName="AdressesRowChangeEventHandler" msprop:Generator_RowDeletedName="AdressesRowDeleted" msprop:Generator_RowEvArgName="AdressesRowChangeEvent" msprop:Generator_RowChangedName="AdressesRowChanged" msprop:Generator_RowClassName="AdressesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Adresse" msprop:Generator_ColumnVarNameInTable="columnAdresse" msprop:Generator_ColumnPropNameInRow="Adresse" msprop:Generator_ColumnPropNameInTable="AdresseColumn" msprop:Generator_UserColumnName="Adresse">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Serveur" msprop:Generator_ColumnVarNameInTable="columnServeur" msprop:Generator_ColumnPropNameInRow="Serveur" msprop:Generator_ColumnPropNameInTable="ServeurColumn" msprop:Generator_UserColumnName="Serveur" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Mail" msprop:Generator_TableClassName="MailDataTable" msprop:Generator_TableVarName="tableMail" msprop:Generator_TablePropName="Mail" msprop:Generator_RowDeletingName="MailRowDeleting" msprop:Generator_UserTableName="Mail" msprop:Generator_RowChangingName="MailRowChanging" msprop:Generator_RowEvHandlerName="MailRowChangeEventHandler" msprop:Generator_RowDeletedName="MailRowDeleted" msprop:Generator_RowEvArgName="MailRowChangeEvent" msprop:Generator_RowChangedName="MailRowChanged" msprop:Generator_RowClassName="MailRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Adresse" msprop:Generator_ColumnVarNameInTable="columnAdresse" msprop:Generator_ColumnPropNameInRow="Adresse" msprop:Generator_ColumnPropNameInTable="AdresseColumn" msprop:Generator_UserColumnName="Adresse">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Passe" msprop:Generator_ColumnVarNameInTable="columnPasse" msprop:Generator_ColumnPropNameInRow="Passe" msprop:Generator_ColumnPropNameInTable="PasseColumn" msprop:Generator_UserColumnName="Passe" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Administrateurs" />
      <xs:field xpath="mstns:NumTel" />
    </xs:unique>
    <xs:unique name="Adresses_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Adresses" />
      <xs:field xpath="mstns:Adresse" />
    </xs:unique>
    <xs:unique name="Mail_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Mail" />
      <xs:field xpath="mstns:Adresse" />
    </xs:unique>
  </xs:element>
</xs:schema>